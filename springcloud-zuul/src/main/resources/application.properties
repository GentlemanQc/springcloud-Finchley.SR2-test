###########################################Zuul基础配置#################################################

server.port=8558
server.servlet.context-path=/public-gateway
spring.application.name=public-gateway

###########################################Zuul注册Eureka配置#################################################

eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.healthcheck.enabled=true
eureka.client.serviceUrl.defaultZone=http://localhost:8688/eureka-server/eureka/
eureka.instance.health-check-url-path=${server.servlet.context-path}/actuator/health
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${server.port}
eureka.instance.lease-expiration-duration-in-seconds=90
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.preferIpAddress=true
eureka.instance.status-page-url-path=${server.servlet.context-path}/actuator/info

###########################################Zuul路由配置#################################################

zuul.routes.user-api.path=/user-api/**
zuul.routes.user-api.serviceId=user-api
zuul.routes.user-api.stripPrefix=false

zuul.routes.role-api.path=/role-api/**
zuul.routes.role-api.serviceId=role-api
zuul.routes.role-api.stripPrefix=false

###########################################Zuul线程隔离配置#################################################

zuul.ribbonIsolationStrategy=THREAD
zuul.threadPool.useSeparateThreadPools=true
zuul.threadPool.threadPoolKeyPrefix=public-gateway-

#启用Hystrix指标轮询
hystrix.metrics.enabled=true
#后续轮询度量之间的间隔。默认为2000ms。
hystrix.metrics.polling-interval-ms=2000

#当不指定threadPoolKeyPrefix时，HystrixThreadPoolKey默认是serviceId
#当指定threadPoolKeyPrefix时，HystrixThreadPoolKey是threadPoolKeyPrefix+serviceId
hystrix.threadpool.user-api.coreSize=20
hystrix.threadpool.user-api.maximumSize=40
hystrix.threadpool.user-api.maxQueueSize=20
hystrix.threadpool.user-api.queueSizeRejectionThreshold=200
hystrix.threadpool.user-api.allowMaximumSizeToDivergeFromCoreSize=true

#当不指定threadPoolKeyPrefix时，HystrixThreadPoolKey默认是serviceId
#当指定threadPoolKeyPrefix时，HystrixThreadPoolKey是threadPoolKeyPrefix+serviceId
hystrix.threadpool.public-gateway-role-api.coreSize=20
hystrix.threadpool.public-gateway-role-api.maximumSize=40
hystrix.threadpool.public-gateway-role-api.maxQueueSize=20
hystrix.threadpool.public-gateway-role-api.queueSizeRejectionThreshold=200
hystrix.threadpool.public-gateway-role-api.allowMaximumSizeToDivergeFromCoreSize=true

###########################################Zuul超时配置#################################################
#默认zuul启用ribbon
ribbon.eureka.enabled=true
#ribbon请求连接的超时时间
ribbon.ConnectTimeout=2000
#请求处理的超时时间
ribbon.ReadTimeout=2000

#指定服务的ribbon链接超时时间
user-api.ribbon.ConnectTimeout=4000
##指定服务的ribbon读超时时间
user-api.ribbon.ReadTimeout=4000
#指定服务的ribbon链接超时时间
role-api.ribbon.ConnectTimeout=4000
##指定服务的ribbon读超时时间
role-api.ribbon.ReadTimeout=4000

##对所有请求操作都进行重试
#ribbon.OkToRetryOnAllOperations=true
##对当前服务筛选出的实例的重试次数（第一次分配给9082的时候，如果404，则再重试MaxAutoRetries次，如果还是404，则切换到其他服务MaxAutoRetriesNextServer决定）
#ribbon.MaxAutoRetries=3
##对当前服务筛选出的实例的下一个实例的重试次数(比如本次请求分配给9082处理，发现404，则切换分配给9081处理，如果还是404，则返回404给客户端）
#ribbon.MaxAutoRetriesNextServer=1

#ribbon.OkToRetryOnAllOperations=false
##对当前服务的重试次数（第一次分配给9082的时候，如果404，则再重试MaxAutoRetries次，如果还是404，则切换到其他服务MaxAutoRetriesNextServer决定）
#ribbon.MaxAutoRetries=0
##切换服务的次数(比如本次请求分配给9082处理，发现404，则切换分配给9081处理，如果还是404，则返回404给客户端）
#ribbon.MaxAutoRetriesNextServer=1
##ribbo负载均衡策略配置，默认是依次轮询
#role-api.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
